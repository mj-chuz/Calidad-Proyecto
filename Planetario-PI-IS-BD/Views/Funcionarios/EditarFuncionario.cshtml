
@model Planetario.Models.FuncionarioModel
@{
    ViewBag.Title = "Editar funcionario";
    List<SelectListItem> Generos = new List<SelectListItem>() { new SelectListItem { Text = "Masculino" }, new SelectListItem { Text = "Femenino" }, new SelectListItem { Text = "No especificado" } };
    List<SelectListItem> Roles = new List<SelectListItem>() { new SelectListItem { Text = "Coordinador" }, new SelectListItem { Text = "Colaborador" }, new SelectListItem { Text = "Educador" } };
    List<SelectListItem> Titulos = new List<SelectListItem>() { new SelectListItem { Text = "Primaria terminada" }, new SelectListItem { Text = "Secundaria terminada" }, new SelectListItem { Text = "Univesidad terminada" }, new SelectListItem { Text = "Sin estudios terminados" } };
}
<html>
<head>
</head>
<body>

    @using (Html.BeginForm("EditarFuncionario", "Funcionarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(funcionarioModel => funcionarioModel.NumeroIdentificacion)
    <div class="form-horizontal formulario-edicion-funcionarios">
        <h1>Formulario de edicion de funcionarios</h1>
        <h4>Ingrese los siguientes datos:</h4>
        <h8>* Son campos obligatorios</h8>
        <hr />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.NumeroIdentificacion)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.NumeroIdentificacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.NumeroIdentificacion, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Nombre)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.Nombre, new { @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Nombre, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.PrimerApellido)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.PrimerApellido, new { @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.PrimerApellido, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.SegundoApellido)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.SegundoApellido, new { @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.SegundoApellido, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Genero)
                    @Html.DropDownListFor(funcionarioModel => funcionarioModel.Genero, Generos, new { @class = "form-select" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Genero, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Pais)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.Pais, new { style = "display:none;", id = "paisRelleno" })
                    @Html.DropDownList("paisSeleccionado", new SelectList(string.Empty, "Value", "Text"), "---", new { @class = "form-select" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Pais, "", new { @class = "text-danger" })
                    <p id="error-paises"></p>
                </div>
                <div class="form-group" style="padding-bottom: 0">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Idiomas)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.Idiomas, new { style = "display:none;", id = "idiomasRelleno" })
                    @Html.DropDownList("listaIdiomas", new SelectList(string.Empty, "Value", "Text"), "---", new { @class = "form-select", @onchange = "agregarTagIdioma(this.value)" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Idiomas, "", new { @class = "text-danger" })
                    <p id="error-idiomas"></p>
                    <input type="text" name="idiomasSeleccionados" id="idiomasSeleccionados" value="" style="display: none;" />
                    <div id="contenedor-idiomas-seleccionados" style="margin-top: 5px;"></div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Descripcion)
                    @Html.TextAreaFor(funcionarioModel => funcionarioModel.Descripcion, new { @class = "form-control", @rows = "3" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Descripcion, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.TituloAcademico)
                    @Html.DropDownListFor(funcionarioModel => funcionarioModel.TituloAcademico, Titulos, new { @class = "form-select" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.TituloAcademico, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Ocupacion)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.Ocupacion, new { @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Ocupacion, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Telefono)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.Telefono, new { type = "tel", @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Telefono, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.FechaDeNacimiento)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.FechaDeNacimiento, new { type = "date", @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.FechaDeNacimiento, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Correo)
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.Correo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Correo, "", new
                    {
                        @class
                   = "text-danger"
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.Rol)
                    @Html.DropDownListFor(funcionarioModel => funcionarioModel.Rol, Roles, new { @class = "form-select" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.Rol, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(funcionarioModel => funcionarioModel.archivoFoto)
                    <br />
                    @Html.TextBoxFor(funcionarioModel => funcionarioModel.archivoFoto, new { type = "file", @class = "btn btn alert-info" })
                    @Html.ValidationMessageFor(funcionarioModel => funcionarioModel.archivoFoto, "", new { @class = "text-danger" })
                </div>
                <input type="submit" class="btn btn-primary boton-edicion-funcionarios" style="float: right; margin-right: 20px" value="Guardar" onclick="revisar()" />
            </div>
            <div id="obtenedor-paises" data-request-url="@Url.Action("ObtenerPaises","Funcionarios")"></div>
            <div id="obtenedor-idiomas" data-request-url="@Url.Action("ObtenerIdiomas","Funcionarios")"></div>
        </div>
    </div>
    }
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
</html>
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script type="text/javascript" src="~/JSON/paises.json"></script>
<script type="text/javascript" src="~/Scripts/SeleccionadorMultiple.js"></script>
<script type="text/javascript" src="~/Scripts/CargadorDatosPais.js"></script>
<script type="text/javascript" src="~/Scripts/VerificadorFormularioFuncionario.js"></script>
<script type="text/javascript">
    let selectorMultipleIdiomas = new SeleccionadorMultiple("#contenedor-idiomas-seleccionados", "#idiomasSeleccionados");
</script>