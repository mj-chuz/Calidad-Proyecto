
@model Planetario.Models.ActividadModel
@{
    ViewBag.Title = "Crear Actividad";
    List<SelectListItem> tiposActividad = new List<SelectListItem>() { new SelectListItem { Text = "Taller" }, new SelectListItem { Text = "Charla" } };
    List<SelectListItem> tipoPublico = new List<SelectListItem>() { new SelectListItem { Text = "Infantil" }, new SelectListItem { Text = "Juvenil" }, new SelectListItem { Text = "Adulto" }, new SelectListItem { Text = "Adulto mayor" }, new SelectListItem { Text = "Especialistas en astronomía" } };
    List<SelectListItem> dificultad = new List<SelectListItem>() { new SelectListItem { Text = "Básico" }, new SelectListItem { Text = "Intermedio" }, new SelectListItem { Text = "Avanzado" } };
    List<SelectListItem> modalidad = new List<SelectListItem>() { new SelectListItem { Text = "Virtual" }, new SelectListItem { Text = "Presencial" } };
}

<html>
<head>
</head>
<body>

    @if (ViewBag.Message != null)
    {
        if (ViewBag.ExitoAlCrear)
        {
            <div class="alert-success">
                <h3> @ViewBag.Message </h3>
            </div>
        }
        else
        {
            <div class="alert-danger">
                <h3> @ViewBag.Message </h3>
            </div>
        }
    }
    <div id="actividadController" data-request-url="@Url.Action("ObtenerListaTopicos", "Actividad")"></div>
    @using (Html.BeginForm("CrearActividad", "Actividad", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal formulario-edicion-funcionarios">
            <h1>Formulario de creación de actividad</h1>
            <h5>Inserte los siguientes datos</h5>
            <h8>* Son campos obligatorios</h8>
            <hr />
            <div class="row">

                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.TipoDeActividad)
                        @Html.DropDownListFor(actividadModel => actividadModel.TipoDeActividad, tiposActividad, new { @class = "form-select" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.TipoDeActividad, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.Titulo)
                        @Html.TextBoxFor(actividadModel => actividadModel.Titulo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.Titulo, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.Descripcion)
                        @Html.TextAreaFor(actividadModel => actividadModel.Descripcion, new { @class = "form-control", @rows = "5" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.Descripcion, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group" style="padding-top: 31px;">
                        @Html.LabelFor(actividadModel => actividadModel.Fecha)
                        @Html.TextBoxFor(actividadModel => actividadModel.Fecha, new { type = "datetime-local", @class = "form-control" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.Fecha, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.Duracion)
                        @Html.TextBoxFor(actividadModel => actividadModel.Duracion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.Duracion, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.Modalidad)
                        @Html.DropDownListFor(actividadModel => actividadModel.Modalidad, modalidad, new { @class = "form-control" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.Modalidad, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.CuposDisponibles)
                        @Html.TextBoxFor(actividadModel => actividadModel.CuposDisponibles, new { @class = "form-control" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.CuposDisponibles, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.Correo)
                        @Html.TextBoxFor(actividadModel => actividadModel.Correo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.Correo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.PrecioSugerido)
                        @Html.TextBoxFor(actividadModel => actividadModel.PrecioSugerido, new { @class = "form-control" })
                        @Html.ValidationMessage("ErrorPrecioSugerido", new { @class = "text-danger" })
                        @Html.ValidationSummary(true)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.PublicoMeta)
                        @Html.DropDownListFor(actividadModel => actividadModel.PublicoMeta, tipoPublico, "---", new { @class = "form-select", @onchange = "agregarTagPublicoMeta(this.value)" })
                        @Html.ValidationMessage("ErrorPublicoMeta", new { @class = "text-danger" })
                        @Html.ValidationSummary(true)
                    </div>
                    <input type="text" name="publicosSeleccionados" id="publicosSeleccionados" value="" style="display: none;" />
                    <div id="contenedor-publico-seleccionado" style="margin-left: 16px;"></div>
                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.NivelDeComplejidad)
                        @Html.DropDownListFor(actividadModel => actividadModel.NivelDeComplejidad, dificultad, new { @class = "form-select" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.NivelDeComplejidad, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(actividadModel => actividadModel.Categoria)
                        @Html.TextBoxFor(funcionarioModel => funcionarioModel.Categoria, new { style = "display:none;", id = "categoriaRelleno" })
                        @Html.DropDownList("categoriaSeleccionada", ViewData["Categorias"] as List<SelectListItem>, "---", new { @class = "form-select", @onchange = "filtrarTopicosActividad('actividadController')" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.Categoria, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("ErrorCategoria", new { @class = "text-danger" })
                        @Html.ValidationSummary(true)
                        <p id="error-categoria"></p>
                    </div>

                    <div class="form-group" style="padding-top:0px">
                        @Html.LabelFor(actividadModel => actividadModel.Topicos)
                        @Html.TextBoxFor(funcionarioModel => funcionarioModel.Topicos, new { style = "display:none;" })
                        @Html.DropDownList("listaTopicos", new SelectList(string.Empty, "Value", "Text"), "---", new { @class = "form-select seleccion-tópicos", @onchange = "agregarTagTopico(this.value)" })
                        @Html.ValidationMessage("ErrorTopicos", new { @class = "text-danger" })
                        @Html.ValidationSummary(true)
                        <input type="text" name="topicosSeleccionados" id="topicosSeleccionados" value="" style="display: none;" />
                        <div id="contenedor-topicos-seleccionados" style="margin-left: 16px;"></div>
                    </div>

                    <div class="form-group" style="padding-top:0px">
                        @Html.LabelFor(actividadModel => actividadModel.EnlaceStream)
                        @Html.TextBoxFor(actividadModel => actividadModel.EnlaceStream, new { @class = "form-control" })
                        @Html.ValidationMessageFor(actividadModel => actividadModel.EnlaceStream, "", new { @class = "text-danger" })
                    </div>

                    <input type="submit" class="btn btn-primary boton-edicion-funcionarios" value="Guardar" style="float: right; margin-right: 20px;" onclick="revisar()" />
                </div>
            </div>



        </div>
    }
</body>
</html>

<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script type="text/javascript" src="~/Scripts/FiltradorTopicos.js"></script>
<script type="text/javascript" src="~/Scripts/SeleccionadorMultiple.js"></script>
<script type="text/javascript" src="~/Scripts/VerificadorCamposFormulario.js"></script>

<script type="text/javascript">
    let selectorMultipleTopicos = new SeleccionadorMultiple("#contenedor-topicos-seleccionados", "#topicosSeleccionados");
    let selectorMultiplePublicoMeta = new SeleccionadorMultiple("#contenedor-publico-seleccionado", "#publicosSeleccionados");
</script>


<script>
    let verificadorCampoCategoria = new VerificadorCamposSeleccionFormulario("categoriaRelleno", "categoriaSeleccionada", "error-categoria");
    function revisar() {
        verificadorCampoCategoria.revisarCampoSeleccionSimple();
    }
</script>


